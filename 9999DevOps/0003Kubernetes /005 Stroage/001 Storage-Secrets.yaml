# 密码存储

# 一.类型
# 1.Service Account
# kubernetes 自动创建
# 挂载到Pod的/run/secrets/kubernetes.io/serviceaccount

# 2.Qpaque
# map类型 value必须是base64编码格式
# 存储密码 密钥 base64格式

# 3.kubernetes.io/dockerconfigjson
# 创建docker registry的secret
# demo
# $ kubectl create secret docker-registry registrykey \
#   --docker-server=DOCKER-SERVER \
#   --docker-username=DOCKER_USER \
#   --docker-password=DOCKER_PASSWORD \
#   --docker-email=DOCKER_EMAIL \

# 响应结果
# secret "registtrykey"  created

# 二.注意
# 创建时，

# 三.使用
# 1.Qpaque创建
# $ echo -n "admin" | based64
# $ echo -n "password" | base64
---
apiVersion: v1
kind: Secret
metadata:
  name: mysecret
type: Opaque
data:
  username: xxx
  password: yyy
# 2. 使用
# 2.1 使用volumes
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: secret-test
  name: secret-test
spec:
  containers:
    - name: secrets
      image: xxx
      # 获取columes
      volumeMounts:
        - name: secrets
          mountPath: ""
          readOnly: true
  # 挂载哪个secrets
  volumes:
    # secret名字
    - name: secrets
      secret:
        secretName: mysecret
# 2.2 环境变量
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-de
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pod-de
  template:
    metadata:
      labels:
        app: pod-de
    spec:
      containers:
        - name: pod-test
          image: xx
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: TEST_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mysecret
            - name: TEST_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysecret

# 2.
# 3.docker registry
---
apiVersion: v1
kind: Pod
metadata:
  name: foo
  namespace: default
spec:
  containers:
    - name: foo
      image: xxx
      imagePullPolicy: IfNotPresent
  imagePullSecrets:
    - name: registtrykey



